{"ast":null,"code":"import _regeneratorRuntime from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elliotthomas/Desktop/plc-project/client/src/Components/AddInfo/AddInfo.js\";\nimport React, { Component } from 'react';\nimport './AddInfo.css';\nimport Form from 'react-bootstrap/Form';\n\nvar AddInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddInfo, _Component);\n\n  function AddInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      datesSelection: '',\n      date: '',\n      name: '',\n      nickname: '',\n      title: '',\n      intro: '',\n      scripture: '',\n      citation: '',\n      prayer: ''\n    };\n\n    _this.getDates = function () {\n      var personDates = ['Choose...', 'September 8', 'September 15', 'September 22', 'September 29', 'October 6', 'October 13'];\n      var dates = personDates.map(function (date) {\n        return React.createElement(\"option\", {\n          key: date,\n          value: date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, date);\n      });\n\n      _this.setState({\n        datesSelection: dates\n      });\n    };\n\n    _this.handleChangeFor = function (property) {\n      return function (event) {\n        _this.setState(_defineProperty({}, property, event.target.value));\n      };\n    };\n\n    _this.select = function (event) {\n      var date = event.currentTarget.value;\n\n      _this.setState({\n        date: date\n      });\n    };\n\n    _this.handleSubmitPerson =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.next = 3;\n                return fetch('/api/addPerson', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    postPerson: _this.props.postPerson\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(AddInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getDates();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmitPerson,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Create New Person of Promise: Name - \", this.props.name, \" Date - \", this.state.date)), React.createElement(Form.Group, {\n        controlId: \"formDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Choose Date\"), React.createElement(Form.Control, {\n        onChange: this.select,\n        as: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.datesSelection)), React.createElement(Form.Group, {\n        controlId: \"formName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Form.Control, {\n        onChange: this.props.handleChangeFor('biblical_name'),\n        value: this.props.postPerson.biblical_name,\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input-fields\",\n        placeholder: \"Nickname\",\n        value: this.props.postPerson.nickname,\n        onChange: this.props.handleChangeFor('nickname'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input-fields\",\n        placeholder: \"Add Question\",\n        value: this.state.question,\n        onChange: this.handleChangeFor('question'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"input-fields\",\n        rows: \"8\",\n        placeholder: \"Add Lesson\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.state.responseToPost), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, this.state.response));\n    }\n  }]);\n\n  return AddInfo;\n}(Component);\n\nexport default AddInfo;","map":{"version":3,"sources":["/Users/elliotthomas/Desktop/plc-project/client/src/Components/AddInfo/AddInfo.js"],"names":["React","Component","Form","AddInfo","state","datesSelection","date","name","nickname","title","intro","scripture","citation","prayer","getDates","personDates","dates","map","setState","handleChangeFor","property","event","target","value","select","currentTarget","handleSubmitPerson","preventDefault","fetch","method","headers","body","JSON","stringify","postPerson","props","response","text","responseToPost","biblical_name","question"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AddInfo.css';\nimport Form from 'react-bootstrap/Form';\n\nclass AddInfo extends Component {\n\n  componentWillMount() { \n    this.getDates();\n  }\n\n  state = {\n    datesSelection: '',\n    date: '',\n    name: '',\n    nickname: '',\n    title: '',\n    intro: '',\n    scripture: '',\n    citation: '',\n    prayer: ''\n  }\ngetDates = () => {\n  const personDates = ['Choose...','September 8', 'September 15', 'September 22', 'September 29', 'October 6', 'October 13' ]\n  const dates = (personDates.map(date => <option key = {date} value = {date}>{date}</option>));\n  this.setState({ datesSelection: dates})\n}\n\n\n// getVerse = async () => {\n//   console.log('hello')\n//   const bibleId = 'f72b840c855f362c-04'\n//   const response = await fetch(`https://api.scripture.api.bible/v1/bibles/${bibleId}/passages/${this.state.bibleBookId}.${this.state.bibleChapter}.${this.state.bibleVerse1}-${this.state.bibleBookId}.${this.state.bibleChapter}.${this.state.bibleVerse2}?content-type=text`, {\n//     method: 'GET',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       'api-key': '230adc9049bc15384c218ba474b48eca'\n//     },\n//   })\n//   const body = await response.json();\n//   if (response.status !== 200) throw Error(body.message);\n//   this.setState({lesson: body.data.content})\n//   console.log(body.data.content)\n// }\n\nhandleChangeFor = (property) => {\n  return (event) => {\n      this.setState({\n              [property]: event.target.value,\n  })\n}\n}\n\n// select = (event) => {\n//   let bookChapters;\n//   const bibleId = event.currentTarget.value\n//   this.setState({\n//     bibleBookId: bibleId,\n//     bibleBookName: event.currentTarget.textContent\n//   }, () =>{\n//     const books = (this.state.responseBooks)\n// for (let book of books) {\n//   if(book.bible_book_id === bibleId) {\n//     bookChapters = book.chapters\n//   }\n// }\n\n// let chapterArray = []\n// let counter = 1\n\n// while(bookChapters >= counter) {\n//   chapterArray.push(counter)\n//   counter++;\n// }\n\n// console.log('chapterArray', chapterArray)\n\n// const chapterOptions = (chapterArray.map(chapter => <option onChange= {this.chapterOption} key = {chapter}>{chapter}</option>));\n// this.setState({chapterOptions: chapterOptions})\n//   })\n// }\n\n// chapterOption = (event) => {\n//   console.log(event.currentTarget.value)\n//   this.setState({bibleChapter: event.currentTarget.value})\n// }\n\nselect = (event) => {\n  const date = event.currentTarget.value\n  this.setState({\n    date: date\n  })\n}\n\nhandleSubmitPerson = async event => {\nevent.preventDefault();\nconst response = await fetch('/api/addPerson', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ postPerson: this.props.postPerson }),\n});\nconst body = await response.text();\nthis.setState({ responseToPost: body });\n}\n\n\n\n\nrender() {\n    return (\n        <div>\n          <form onSubmit={this.handleSubmitPerson}>\n          <p>\n            <strong className = \"header\">Create New Person of Promise: Name - {this.props.name} Date - {this.state.date}</strong>\n          </p>\n          <Form.Group controlId=\"formDate\">\n      <Form.Label>Choose Date</Form.Label>\n      <Form.Control onChange ={this.select} as=\"select\">\n      {this.state.datesSelection}\n      </Form.Control>\n    </Form.Group>\n    <Form.Group controlId=\"formName\">\n    <Form.Label>Name</Form.Label>\n    <Form.Control onChange= {this.props.handleChangeFor('biblical_name')} value = {this.props.postPerson.biblical_name} placeholder=\"Name\" />\n  </Form.Group>\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Nickname\"\n            value={this.props.postPerson.nickname}\n            onChange= {this.props.handleChangeFor('nickname')}\n          />\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Add Question\"\n            value={this.state.question}\n            onChange= {this.handleChangeFor('question')}\n          />\n          <textarea className = 'input-fields' rows = '8' placeholder =\"Add Lesson\"></textarea>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n        {/* <form onSubmit={this.props.handleSubmit}> */}\n          {/* <label>\n          Choose Book: \n          <select onChange ={this.select}> {this.state.books}</select>\n          </label>\n          <label>\n          Choose Chapter: \n          <select onChange = {this.chapterOption}> {this.state.chapterOptions}</select>\n          </label>\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Verse 1\"\n            value={this.state.bibleVerse1}\n            onChange= {this.handleChangeFor('bibleVerse1')}\n          />\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Verse 2\"\n            value={this.state.bibleVerse2}\n            onChange= {this.handleChangeFor('bibleVerse2')}\n          />\n          <button onClick= {this.getVerse}>Retrieve Verse</button>\n          <div className=\"display-linebreak\">\n          <p>Lesson to add for {this.props.name}:</p>\n           {this.state.lesson}\n          </div> */}\n        {/* </form> */}\n        <p>{this.state.response}</p>\n        </div>\n    );\n  }\n}\n\nexport default AddInfo;"]},"metadata":{},"sourceType":"module"}