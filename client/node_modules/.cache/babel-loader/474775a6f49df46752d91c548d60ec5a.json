{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _pt from \"prop-types\";\nimport React from 'react';\nimport Element from './Element';\nimport Parser from './Parser';\n\nvar Markup = function (_React$PureComponent) {\n  _inherits(Markup, _React$PureComponent);\n\n  function Markup() {\n    _classCallCheck(this, Markup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Markup).apply(this, arguments));\n  }\n\n  _createClass(Markup, [{\n    key: \"getContent\",\n    value: function getContent() {\n      var _this$props = this.props,\n          _this$props$content = _this$props.content,\n          content = _this$props$content === void 0 ? '' : _this$props$content,\n          noHtml = _this$props.noHtml,\n          noHtmlExceptMatchers = _this$props.noHtmlExceptMatchers,\n          disableLineBreaks = _this$props.disableLineBreaks,\n          disableWhitelist = _this$props.disableWhitelist,\n          emptyContent = _this$props.emptyContent,\n          parsedContent = _this$props.parsedContent;\n\n      if (parsedContent) {\n        return parsedContent;\n      }\n\n      var markup = new Parser(content || '', {\n        disableLineBreaks: disableLineBreaks,\n        disableWhitelist: disableWhitelist,\n        noHtml: noHtml,\n        noHtmlExceptMatchers: noHtmlExceptMatchers\n      }).parse();\n      return markup.length > 0 ? markup : emptyContent;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content = this.getContent();\n      var tag = this.props.tagName;\n      return tag === 'fragment' ? React.createElement(React.Fragment, null, content) : React.createElement(Element, {\n        tagName: tag || 'div'\n      }, content);\n    }\n  }]);\n\n  return Markup;\n}(React.PureComponent);\n\n_defineProperty(Markup, \"propTypes\", {\n  content: _pt.oneOfType([_pt.string, _pt.oneOf([null])]),\n  disableLineBreaks: _pt.bool,\n  disableWhitelist: _pt.bool,\n  emptyContent: _pt.node,\n  noHtml: _pt.bool,\n  noHtmlExceptMatchers: _pt.bool,\n  parsedContent: _pt.node,\n  tagName: _pt.oneOfType([_pt.any, _pt.oneOf(['fragment'])])\n});\n\n_defineProperty(Markup, \"defaultProps\", {\n  content: '',\n  disableLineBreaks: false,\n  disableWhitelist: false,\n  emptyContent: null,\n  noHtml: false,\n  noHtmlExceptMatchers: false,\n  parsedContent: null,\n  tagName: 'div'\n});\n\nexport { Markup as default };","map":null,"metadata":{},"sourceType":"module"}