{"ast":null,"code":"import _defineProperty from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elliotthomas/Desktop/plc-project/client/src/Components/AddInfo/AddInfo.js\";\nimport React, { Component } from 'react';\nimport './AddInfo.css';\n\nvar AddInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddInfo, _Component);\n\n  function AddInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lesson: '',\n      question: '',\n      mapUrl: '',\n      timelineUrl: '',\n      galleryUrl: '',\n      books: '',\n      responseBooks: '',\n      bibleBookId: '',\n      bibleBookName: '',\n      bibleChapter: '',\n      bibleVerse1: '',\n      bibleVerse2: '',\n      chapters: ''\n    };\n    _this.getBooks =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, items;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/getBooks');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              items = body.map(function (book) {\n                return React.createElement(\"option\", {\n                  key: book.bible_book_id,\n                  value: book.bible_book_id,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 29\n                  },\n                  __self: this\n                }, book.bible_book_name);\n              });\n\n              _this.setState({\n                books: items\n              });\n\n              _this.setState({\n                responseBooks: body\n              });\n\n              console.log(_this.state.responseBooks);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleChangeFor = function (property) {\n      return function (event) {\n        _this.setState(_defineProperty({}, property, event.target.value));\n      };\n    };\n\n    _this.handleSubmitPerson =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return fetch('/api/addPerson', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    postPerson: _this.props.postPerson\n                  })\n                });\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(AddInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmitPerson,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Create New Biblical Hero(\", this.props.name, \"):\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input-fields\",\n        placeholder: \"Name\",\n        value: this.props.postPerson.biblical_name,\n        onChange: this.props.handleChangeFor('biblical_name'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input-fields\",\n        placeholder: \"Nickname\",\n        value: this.props.postPerson.nickname,\n        onChange: this.props.handleChangeFor('nickname'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Continue\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.state.responseToPost), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input-fields\",\n        placeholder: \"Add Question\",\n        value: this.state.question,\n        onChange: this.handleChangeFor('question'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.response));\n    }\n  }]);\n\n  return AddInfo;\n}(Component);\n\nexport default AddInfo;","map":{"version":3,"sources":["/Users/elliotthomas/Desktop/plc-project/client/src/Components/AddInfo/AddInfo.js"],"names":["React","Component","AddInfo","state","lesson","question","mapUrl","timelineUrl","galleryUrl","books","responseBooks","bibleBookId","bibleBookName","bibleChapter","bibleVerse1","bibleVerse2","chapters","getBooks","fetch","response","json","body","status","Error","message","items","map","book","bible_book_id","bible_book_name","setState","console","log","handleChangeFor","property","event","target","value","handleSubmitPerson","preventDefault","method","headers","JSON","stringify","postPerson","props","text","responseToPost","name","biblical_name","nickname","handleSubmit"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;IAEMC,O;;;;;;;;;;;;;;;;;UAMJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,KAAK,EAAE,EAND;AAONC,MAAAA,aAAa,EAAE,EAPT;AAQNC,MAAAA,WAAW,EAAE,EARP;AASNC,MAAAA,aAAa,EAAE,EATT;AAUNC,MAAAA,YAAY,EAAE,EAVR;AAWNC,MAAAA,WAAW,EAAE,EAXP;AAYNC,MAAAA,WAAW,EAAE,EAZP;AAaNC,MAAAA,QAAQ,EAAE;AAbJ,K;UAeVC,Q;;;;6BAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcC,KAAK,CAAC,eAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,qBAEUA,QAAQ,CAACC,IAAT,EAFV;;AAAA;AAEHC,cAAAA,IAFG;;AAAA,oBAGLF,QAAQ,CAACG,MAAT,KAAoB,GAHf;AAAA;AAAA;AAAA;;AAAA,oBAG0BC,KAAK,CAACF,IAAI,CAACG,OAAN,CAH/B;;AAAA;AAIHC,cAAAA,KAJG,GAIMJ,IAAI,CAACK,GAAL,CAAS,UAAAC,IAAI;AAAA,uBAAI;AAAQ,kBAAA,GAAG,EAAIA,IAAI,CAACC,aAApB;AAAmC,kBAAA,KAAK,EAAID,IAAI,CAACC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiED,IAAI,CAACE,eAAtE,CAAJ;AAAA,eAAb,CAJN;;AAKT,oBAAKC,QAAL,CAAc;AAAErB,gBAAAA,KAAK,EAAEgB;AAAT,eAAd;;AACA,oBAAKK,QAAL,CAAc;AAAEpB,gBAAAA,aAAa,EAAEW;AAAjB,eAAd;;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAK7B,KAAL,CAAWO,aAAvB;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UA2BXuB,e,GAAkB,UAACC,QAAD,EAAc;AAC9B,aAAO,UAACC,KAAD,EAAW;AACd,cAAKL,QAAL,qBACSI,QADT,EACoBC,KAAK,CAACC,MAAN,CAAaC,KADjC;AAGL,OAJC;AAKD,K;;UAoCDC,kB;;;;;+BAAqB,kBAAMH,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBA,gBAAAA,KAAK,CAACI,cAAN;AADqB;AAAA,uBAEErB,KAAK,CAAC,gBAAD,EAAmB;AAC7CsB,kBAAAA,MAAM,EAAE,MADqC;AAE7CC,kBAAAA,OAAO,EAAE;AACP,oCAAgB;AADT,mBAFoC;AAK7CpB,kBAAAA,IAAI,EAAEqB,IAAI,CAACC,SAAL,CAAe;AAAEC,oBAAAA,UAAU,EAAE,MAAKC,KAAL,CAAWD;AAAzB,mBAAf;AALuC,iBAAnB,CAFP;;AAAA;AAEfzB,gBAAAA,QAFe;AAAA;AAAA,uBASFA,QAAQ,CAAC2B,IAAT,EATE;;AAAA;AASfzB,gBAAAA,IATe;;AAUrB,sBAAKS,QAAL,CAAc;AAAEiB,kBAAAA,cAAc,EAAE1B;AAAlB,iBAAd;;AAVqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;yCAxFE;AACnB,WAAKJ,QAAL;AACD;;;6BAsGM;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKqB,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAuD,KAAKO,KAAL,CAAWG,IAAlE,OADF,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAG,cAFd;AAGE,QAAA,WAAW,EAAG,MAHhB;AAIE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWD,UAAX,CAAsBK,aAJ/B;AAKE,QAAA,QAAQ,EAAG,KAAKJ,KAAL,CAAWZ,eAAX,CAA2B,eAA3B,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAQA;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAG,cAFd;AAGE,QAAA,WAAW,EAAG,UAHhB;AAIE,QAAA,KAAK,EAAE,KAAKY,KAAL,CAAWD,UAAX,CAAsBM,QAJ/B;AAKE,QAAA,QAAQ,EAAG,KAAKL,KAAL,CAAWZ,eAAX,CAA2B,UAA3B,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,CAJA,EAoBA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBA,CADF,EAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK9B,KAAL,CAAW4C,cAAf,CAvBA,EAwBA;AAAM,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWM,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA4BE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAG,cAFd;AAGE,QAAA,WAAW,EAAG,cAHhB;AAIE,QAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWE,QAJpB;AAKE,QAAA,QAAQ,EAAG,KAAK4B,eAAL,CAAqB,UAArB,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,EAmCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCF,CAxBA,EA6DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK9B,KAAL,CAAWgB,QAAf,CA7DA,CADJ;AAiED;;;;EA5KmBlB,S;;AA+KtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './AddInfo.css';\n\nclass AddInfo extends Component {\n\n  componentWillMount() { \n    this.getBooks();\n  }\n\n  state = {\n    lesson: '',\n    question: '',\n    mapUrl: '',\n    timelineUrl: '',\n    galleryUrl: '',\n    books: '',\n    responseBooks: '',\n    bibleBookId: '',\n    bibleBookName: '',\n    bibleChapter: '',\n    bibleVerse1: '',\n    bibleVerse2: '',\n    chapters: ''\n  }\ngetBooks = async () => {\n  const response = await fetch('/api/getBooks')\n  const body = await response.json();\n  if (response.status !== 200) throw Error(body.message);\n  const items = (body.map(book => <option key = {book.bible_book_id} value = {book.bible_book_id}>{book.bible_book_name}</option>));\n  this.setState({ books: items})\n  this.setState({ responseBooks: body})\n  console.log(this.state.responseBooks)\n}\n\n\n// getVerse = async () => {\n//   console.log('hello')\n//   const bibleId = 'f72b840c855f362c-04'\n//   const response = await fetch(`https://api.scripture.api.bible/v1/bibles/${bibleId}/passages/${this.state.bibleBookId}.${this.state.bibleChapter}.${this.state.bibleVerse1}-${this.state.bibleBookId}.${this.state.bibleChapter}.${this.state.bibleVerse2}?content-type=text`, {\n//     method: 'GET',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       'api-key': '230adc9049bc15384c218ba474b48eca'\n//     },\n//   })\n//   const body = await response.json();\n//   if (response.status !== 200) throw Error(body.message);\n//   this.setState({lesson: body.data.content})\n//   console.log(body.data.content)\n// }\n\nhandleChangeFor = (property) => {\n  return (event) => {\n      this.setState({\n              [property]: event.target.value,\n  })\n}\n}\n\n// select = (event) => {\n//   let bookChapters;\n//   const bibleId = event.currentTarget.value\n//   this.setState({\n//     bibleBookId: bibleId,\n//     bibleBookName: event.currentTarget.textContent\n//   }, () =>{\n//     const books = (this.state.responseBooks)\n// for (let book of books) {\n//   if(book.bible_book_id === bibleId) {\n//     bookChapters = book.chapters\n//   }\n// }\n\n// let chapterArray = []\n// let counter = 1\n\n// while(bookChapters >= counter) {\n//   chapterArray.push(counter)\n//   counter++;\n// }\n\n// console.log('chapterArray', chapterArray)\n\n// const chapterOptions = (chapterArray.map(chapter => <option onChange= {this.chapterOption} key = {chapter}>{chapter}</option>));\n// this.setState({chapterOptions: chapterOptions})\n//   })\n// }\n\n// chapterOption = (event) => {\n//   console.log(event.currentTarget.value)\n//   this.setState({bibleChapter: event.currentTarget.value})\n// }\n\nhandleSubmitPerson = async event => {\nevent.preventDefault();\nconst response = await fetch('/api/addPerson', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ postPerson: this.props.postPerson }),\n});\nconst body = await response.text();\nthis.setState({ responseToPost: body });\n}\n\n\n\n\nrender() {\n    return (\n        <div>\n          <form onSubmit={this.handleSubmitPerson}>\n          <p>\n            <strong className = \"header\">Create New Biblical Hero({this.props.name}):</strong>\n          </p>\n          <div>\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Name\"\n            value={this.props.postPerson.biblical_name}\n            onChange= {this.props.handleChangeFor('biblical_name')}\n          />\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Nickname\"\n            value={this.props.postPerson.nickname}\n            onChange= {this.props.handleChangeFor('nickname')}\n          />\n          </div>\n          <button type=\"submit\">Continue</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n        <form onSubmit={this.props.handleSubmit}>\n          {/* <label>\n          Choose Book: \n          <select onChange ={this.select}> {this.state.books}</select>\n          </label>\n          <label>\n          Choose Chapter: \n          <select onChange = {this.chapterOption}> {this.state.chapterOptions}</select>\n          </label>\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Verse 1\"\n            value={this.state.bibleVerse1}\n            onChange= {this.handleChangeFor('bibleVerse1')}\n          />\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Verse 2\"\n            value={this.state.bibleVerse2}\n            onChange= {this.handleChangeFor('bibleVerse2')}\n          />\n          <button onClick= {this.getVerse}>Retrieve Verse</button>\n          <div className=\"display-linebreak\">\n          <p>Lesson to add for {this.props.name}:</p>\n           {this.state.lesson}\n          </div> */}\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Add Question\"\n            value={this.state.question}\n            onChange= {this.handleChangeFor('question')}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.response}</p>\n        </div>\n    );\n  }\n}\n\nexport default AddInfo;"]},"metadata":{},"sourceType":"module"}