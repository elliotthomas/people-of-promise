{"ast":null,"code":"import _defineProperty from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elliotthomas/Desktop/plc-project/client/src/Components/AddInfo/AddInfo.js\";\nimport React, { Component } from 'react';\nimport './AddInfo.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nvar AddInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddInfo, _Component);\n\n  function AddInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: '',\n      name: '',\n      nickname: '',\n      title: '',\n      intro: '',\n      scripture: '',\n      citation: '',\n      prayer: '',\n      dateArray: [],\n      nameArray: []\n    };\n    _this.getAllPeople =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, nameArray, dateArray, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, object, fileteredDate;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/people');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              console.log('body from info ->', body);\n              nameArray = [];\n              dateArray = [];\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 14;\n              _iterator = body[Symbol.iterator]();\n\n            case 16:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 28;\n                break;\n              }\n\n              object = _step.value;\n\n              if (!(object.bname === null)) {\n                _context.next = 22;\n                break;\n              }\n\n              return _context.abrupt(\"continue\", 25);\n\n            case 22:\n              nameArray.push(object.bname);\n              fileteredDate = new Intl.DateTimeFormat('en-US').format(object.displaydate);\n              dateArray.push(fileteredDate);\n\n            case 25:\n              _iteratorNormalCompletion = true;\n              _context.next = 16;\n              break;\n\n            case 28:\n              _context.next = 34;\n              break;\n\n            case 30:\n              _context.prev = 30;\n              _context.t0 = _context[\"catch\"](14);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 34:\n              _context.prev = 34;\n              _context.prev = 35;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 37:\n              _context.prev = 37;\n\n              if (!_didIteratorError) {\n                _context.next = 40;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 40:\n              return _context.finish(37);\n\n            case 41:\n              return _context.finish(34);\n\n            case 42:\n              _this.setState({\n                nameArray: nameArray,\n                dateArray: dateArray\n              });\n\n            case 43:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[14, 30, 34, 42], [35,, 37, 41]]);\n    }));\n\n    _this.formatDate = function (date) {};\n\n    _this.handleChangeFor = function (property) {\n      return function (event) {\n        _this.setState(_defineProperty({}, property, event.target.value));\n      };\n    };\n\n    _this.select = function (event) {\n      var date = event.currentTarget.value;\n\n      _this.setState({\n        date: date\n      });\n    };\n\n    _this.handleSubmitPerson =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var objectToSend, response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                objectToSend = {\n                  date: _this.state.date,\n                  name: _this.state.name,\n                  nickname: _this.state.nickname,\n                  title: _this.state.title,\n                  intro: _this.state.intro,\n                  scripture: _this.state.scripture,\n                  citation: _this.state.citation,\n                  prayer: _this.state.prayer\n                };\n                _context2.next = 4;\n                return fetch('/api/addPerson', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    postPerson: objectToSend\n                  })\n                });\n\n              case 4:\n                response = _context2.sent;\n                _context2.next = 7;\n                return response.text();\n\n              case 7:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDeletePerson =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        var name, response, body;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n                name = _this.state.name;\n                _context3.next = 4;\n                return fetch('/api/deletePerson', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(name)\n                });\n\n              case 4:\n                response = _context3.sent;\n                _context3.next = 7;\n                return response.text();\n\n              case 7:\n                body = _context3.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(AddInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getAllPeople();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmitPerson,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Create New Person of Promise: Name - \", this.state.name, \" Date - \", this.state.date)), React.createElement(Form.Group, {\n        controlId: \"formDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.select,\n        as: \"select\",\n        multiple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.datesSelection)), React.createElement(Form.Group, {\n        controlId: \"formName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.handleChangeFor('name'),\n        value: this.state.name,\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formNickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.handleChangeFor('nickname'),\n        value: this.state.nickname,\n        placeholder: \"Nickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.handleChangeFor('title'),\n        value: this.state.title,\n        placeholder: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formIntro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"4\",\n        onChange: this.handleChangeFor('intro'),\n        value: this.state.intro,\n        placeholder: \"Intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formScripture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"4\",\n        onChange: this.handleChangeFor('scripture'),\n        value: this.state.scripture,\n        placeholder: \"Scripture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formCitation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.handleChangeFor('citation'),\n        value: this.state.citation,\n        placeholder: \"Citation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formPrayer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"4\",\n        onChange: this.handleChangeFor('prayer'),\n        value: this.state.prayer,\n        placeholder: \"Prayer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return AddInfo;\n}(Component);\n\nexport default AddInfo;","map":{"version":3,"sources":["/Users/elliotthomas/Desktop/plc-project/client/src/Components/AddInfo/AddInfo.js"],"names":["React","Component","Form","Button","AddInfo","state","date","name","nickname","title","intro","scripture","citation","prayer","dateArray","nameArray","getAllPeople","fetch","response","json","body","status","Error","message","console","log","object","bname","push","fileteredDate","Intl","DateTimeFormat","format","displaydate","setState","formatDate","handleChangeFor","property","event","target","value","select","currentTarget","handleSubmitPerson","preventDefault","objectToSend","method","headers","JSON","stringify","postPerson","text","responseToPost","handleDeletePerson","datesSelection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AddInfo.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass AddInfo extends Component {\n\n  componentWillMount() { \n    this.getAllPeople();\n  }\n\n  state = {\n    date: '',\n    name: '',\n    nickname: '',\n    title: '',\n    intro: '',\n    scripture: '',\n    citation: '',\n    prayer: '',\n    dateArray: [],\n    nameArray: []\n  }\n\n  getAllPeople = async () => {\n    const response = await fetch('/api/people');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    console.log('body from info ->', body)\n    let nameArray = []\n    let dateArray = []\n    for (let object of body) {\n      if(object.bname === null) {\n        continue;\n      } else {\n        nameArray.push(object.bname)\n        const fileteredDate = new Intl.DateTimeFormat('en-US').format(object.displaydate)\n        dateArray.push(fileteredDate)\n      }\n    }\n    this.setState ({\n      nameArray: nameArray,\n      dateArray: dateArray\n    })\n  };\n\n  formatDate = (date) => {\n\n  }\n\nhandleChangeFor = (property) => {\n  return (event) => {\n      this.setState({\n              [property]: event.target.value,\n  })\n}\n}\n\nselect = (event) => {\n  const date = event.currentTarget.value\n  this.setState({\n    date: date\n  })\n}\n\nhandleSubmitPerson = async event => {\nevent.preventDefault();\nconst objectToSend = {\n  date: this.state.date,\n  name: this.state.name,\n  nickname: this.state.nickname,\n  title: this.state.title,\n  intro: this.state.intro,\n  scripture: this.state.scripture,\n  citation: this.state.citation,\n  prayer: this.state.prayer\n}\nconst response = await fetch('/api/addPerson', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ postPerson: objectToSend }),\n});\nconst body = await response.text();\nthis.setState({ responseToPost: body });\n}\n\nhandleDeletePerson = async event => {\n  event.preventDefault();\n  const name = this.state.name;\n  const response = await fetch('/api/deletePerson', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(name),\n  });\n  const body = await response.text();\n  this.setState({ responseToPost: body });\n  }\n\nrender() {\n    return (\n        <div>\n          <Form onSubmit={this.handleSubmitPerson}>\n          <p>\n            <strong className = \"header\">Create New Person of Promise: Name - {this.state.name} Date - {this.state.date}</strong>\n          </p>\n          <Form.Group controlId=\"formDate\">\n      <Form.Control onChange ={this.select} as=\"select\" multiple>\n      {this.state.datesSelection}\n      </Form.Control>\n    </Form.Group>\n    <Form.Group controlId=\"formName\">\n    <Form.Control onChange= {this.handleChangeFor('name')} value = {this.state.name} placeholder=\"Name\" />\n  </Form.Group>\n  <Form.Group controlId=\"formNickname\">\n    <Form.Control onChange= {this.handleChangeFor('nickname')} value = {this.state.nickname} placeholder=\"Nickname\" />\n  </Form.Group>\n  <Form.Group controlId=\"formTitle\">\n    <Form.Control onChange= {this.handleChangeFor('title')} value = {this.state.title} placeholder=\"Title\" />\n  </Form.Group>\n  <Form.Group controlId=\"formIntro\">\n    <Form.Control as = 'textarea' rows = '4' onChange= {this.handleChangeFor('intro')} value = {this.state.intro} placeholder=\"Intro\" />\n  </Form.Group>\n  <Form.Group controlId=\"formScripture\">\n    <Form.Control as = 'textarea' rows = '4' onChange= {this.handleChangeFor('scripture')} value = {this.state.scripture} placeholder=\"Scripture\" />\n  </Form.Group>\n  <Form.Group controlId=\"formCitation\">\n    <Form.Control onChange= {this.handleChangeFor('citation')} value = {this.state.citation} placeholder=\"Citation\" />\n  </Form.Group>\n  <Form.Group controlId=\"formPrayer\">\n    <Form.Control as = 'textarea' rows = '4' onChange= {this.handleChangeFor('prayer')} value = {this.state.prayer} placeholder=\"Prayer\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">Submit</Button>\n  </Form>\n        </div>\n    );\n  }\n}\n\nexport default AddInfo;"]},"metadata":{},"sourceType":"module"}