{"ast":null,"code":"import _regeneratorRuntime from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elliotthomas/Desktop/plc-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elliotthomas/Desktop/plc-project/client/src/Components/AddInfo/AddInfo.js\";\nimport React, { Component } from 'react';\nimport './AddInfo.css';\nimport Form from 'react-bootstrap/Form';\n\nvar AddInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddInfo, _Component);\n\n  function AddInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      datesSelection: '',\n      date: '',\n      name: '',\n      nickname: '',\n      title: '',\n      intro: '',\n      scripture: '',\n      citation: '',\n      prayer: ''\n    };\n\n    _this.getDates = function () {\n      var personDates = ['Choose Date...', 'September 8', 'September 15', 'September 22', 'September 29', 'October 6', 'October 13'];\n      var dates = personDates.map(function (date) {\n        return React.createElement(\"option\", {\n          key: date,\n          value: date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, date);\n      });\n\n      _this.setState({\n        datesSelection: dates\n      });\n    };\n\n    _this.handleChangeFor = function (property) {\n      return function (event) {\n        _this.setState(_defineProperty({}, property, event.target.value));\n      };\n    };\n\n    _this.select = function (event) {\n      var date = event.currentTarget.value;\n\n      _this.setState({\n        date: date\n      });\n    };\n\n    _this.handleSubmitPerson =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.next = 3;\n                return fetch('/api/addPerson', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    postPerson: _this.props.postPerson\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(AddInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getDates();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmitPerson,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Create New Person of Promise: Name - \", this.props.name, \" Date - \", this.state.date)), React.createElement(Form.Group, {\n        controlId: \"formDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.select,\n        as: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.datesSelection)), React.createElement(Form.Group, {\n        controlId: \"formName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.handleChangeFor('name'),\n        value: this.state.name,\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formNickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.handleChangeFor('nickname'),\n        value: this.state.nickname,\n        placeholder: \"Nickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.handleChangeFor('title'),\n        value: this.state.title,\n        placeholder: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formIntro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"4\",\n        onChange: this.handleChangeFor('intro'),\n        value: this.state.intro,\n        placeholder: \"Intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formScripture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"4\",\n        onChange: this.handleChangeFor('scripture'),\n        value: this.state.scripture,\n        placeholder: \"Scripture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formCitation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: this.handleChangeFor('citation'),\n        value: this.state.citation,\n        placeholder: \"Citation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formPrayer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"4\",\n        onChange: this.handleChangeFor('prayer'),\n        value: this.state.prayer,\n        placeholder: \"Prayer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.responseToPost), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.response));\n    }\n  }]);\n\n  return AddInfo;\n}(Component);\n\nexport default AddInfo;","map":{"version":3,"sources":["/Users/elliotthomas/Desktop/plc-project/client/src/Components/AddInfo/AddInfo.js"],"names":["React","Component","Form","AddInfo","state","datesSelection","date","name","nickname","title","intro","scripture","citation","prayer","getDates","personDates","dates","map","setState","handleChangeFor","property","event","target","value","select","currentTarget","handleSubmitPerson","preventDefault","fetch","method","headers","body","JSON","stringify","postPerson","props","response","text","responseToPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AddInfo.css';\nimport Form from 'react-bootstrap/Form';\n\nclass AddInfo extends Component {\n\n  componentWillMount() { \n    this.getDates();\n  }\n\n  state = {\n    datesSelection: '',\n    date: '',\n    name: '',\n    nickname: '',\n    title: '',\n    intro: '',\n    scripture: '',\n    citation: '',\n    prayer: ''\n  }\n\ngetDates = () => {\n  const personDates = ['Choose Date...','September 8', 'September 15', 'September 22', 'September 29', 'October 6', 'October 13' ]\n  const dates = (personDates.map(date => <option key = {date} value = {date}>{date}</option>));\n  this.setState({ datesSelection: dates})\n}\n\nhandleChangeFor = (property) => {\n  return (event) => {\n      this.setState({\n              [property]: event.target.value,\n  })\n}\n}\n\nselect = (event) => {\n  const date = event.currentTarget.value\n  this.setState({\n    date: date\n  })\n}\n\nhandleSubmitPerson = async event => {\nevent.preventDefault();\nconst response = await fetch('/api/addPerson', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ postPerson: this.props.postPerson }),\n});\nconst body = await response.text();\nthis.setState({ responseToPost: body });\n}\n\n\n\n\nrender() {\n    return (\n        <div>\n          <form onSubmit={this.handleSubmitPerson}>\n          <p>\n            <strong className = \"header\">Create New Person of Promise: Name - {this.props.name} Date - {this.state.date}</strong>\n          </p>\n          <Form.Group controlId=\"formDate\">\n      <Form.Control onChange ={this.select} as=\"select\">\n      {this.state.datesSelection}\n      </Form.Control>\n    </Form.Group>\n    <Form.Group controlId=\"formName\">\n    <Form.Control onChange= {this.handleChangeFor('name')} value = {this.state.name} placeholder=\"Name\" />\n  </Form.Group>\n  <Form.Group controlId=\"formNickname\">\n    <Form.Control onChange= {this.handleChangeFor('nickname')} value = {this.state.nickname} placeholder=\"Nickname\" />\n  </Form.Group>\n  <Form.Group controlId=\"formTitle\">\n    <Form.Control onChange= {this.handleChangeFor('title')} value = {this.state.title} placeholder=\"Title\" />\n  </Form.Group>\n  <Form.Group controlId=\"formIntro\">\n    <Form.Control as = 'textarea' rows = '4' onChange= {this.handleChangeFor('intro')} value = {this.state.intro} placeholder=\"Intro\" />\n  </Form.Group>\n  <Form.Group controlId=\"formScripture\">\n    <Form.Control as = 'textarea' rows = '4' onChange= {this.handleChangeFor('scripture')} value = {this.state.scripture} placeholder=\"Scripture\" />\n  </Form.Group>\n  <Form.Group controlId=\"formCitation\">\n    <Form.Control onChange= {this.handleChangeFor('citation')} value = {this.state.citation} placeholder=\"Citation\" />\n  </Form.Group>\n  <Form.Group controlId=\"formPrayer\">\n    <Form.Control as = 'textarea' rows = '4' onChange= {this.handleChangeFor('prayer')} value = {this.state.prayer} placeholder=\"Prayer\" />\n  </Form.Group>\n\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n        {/* <form onSubmit={this.props.handleSubmit}> */}\n          {/* <label>\n          Choose Book: \n          <select onChange ={this.select}> {this.state.books}</select>\n          </label>\n          <label>\n          Choose Chapter: \n          <select onChange = {this.chapterOption}> {this.state.chapterOptions}</select>\n          </label>\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Verse 1\"\n            value={this.state.bibleVerse1}\n            onChange= {this.handleChangeFor('bibleVerse1')}\n          />\n          <input\n            type=\"text\"\n            className = 'input-fields'\n            placeholder = \"Verse 2\"\n            value={this.state.bibleVerse2}\n            onChange= {this.handleChangeFor('bibleVerse2')}\n          />\n          <button onClick= {this.getVerse}>Retrieve Verse</button>\n          <div className=\"display-linebreak\">\n          <p>Lesson to add for {this.props.name}:</p>\n           {this.state.lesson}\n          </div> */}\n        {/* </form> */}\n        <p>{this.state.response}</p>\n        </div>\n    );\n  }\n}\n\nexport default AddInfo;"]},"metadata":{},"sourceType":"module"}